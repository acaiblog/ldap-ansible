---
- name: Check Load Policy Module
  shell: "slapcat -n 0 |grep olcModuleLoad"
  failed_when: false
  register: policy_module_result

- name: Debug Policy Module
  debug:
    msg: "{{ policy_module_result }}"

- name: Configure ppolicy module
  shell: |
    cat << EOF | ldapadd -Y EXTERNAL -H ldapi:///
    dn: cn=module,cn=config
    cn: module
    objectClass: olcModuleList
    olcModulePath: /usr/lib64/openldap
    olcModuleLoad: ppolicy.la
    EOF
  failed_when: false

- name: Add pwdPolicy entry
  ldap_entry:
    dn: "cn={{ item.value.name }},ou=pwpolicies,{{ ldap_server.dc }}"
    objectClass: "{{ item.value.objectClass }}"
    attributes: "{{ item.value.attributes }}"
    state: "present"
    server_uri: "ldap://{{ ldap_server_ip }}"
    bind_dn: "{{ ldap_server.admin.dn }}"
    bind_pw: "{{ ldap_user.admin.pass }}"
  with_dict: "{{ policy }}"

- name: Add ppolicy to test1 user
  shell: |
    cat << EOF | ldapadd -Y EXTERNAL -H ldapi:///
    dn: uid=test1,ou=users,{{ ldap_server.dc }}
    changetype: modify
    add: pwdPolicySubentry
    pwdPolicySubentry: cn=test,ou=pwpolicies,{{ ldap_server.dc }}
    EOF
  failed_when: false

- name: Add ACL rules
  shell: |
    cat << EOF | ldapadd -Y EXTERNAL -H ldapi:///
    dn: olcDatabase={2}hdb,cn=config
    changetype: modify
    add: olcAccess
    olcAccess: {0}to attrs=userPassword by self write by dn.base="{{ ldap_server.admin.dn }}" write by anonymous auth by * none
    olcAccess: {1}to * by dn.base="{{ ldap_server.admin.dn }}" write by self write by * read
    EOF
  failed_when: false